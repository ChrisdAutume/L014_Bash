Ce document est pour définir certain point du projet.

Glossaire:
- RacineB : chemin absolue vers le point de synchronisation
- RacineA : chemin absolue vers le point à synchroniser
- RacineOrigineA : RacineA le plus haut
- RacineOrigineB : RacineB le plus haut
- J : le journal de synchronisation (./synchro)
- A : fichier ou directory de la branche A
- B : fichier ou directory de la branche B
- A == J: Fichier/Directory conforme avec le journal
- B != J: Fichier/Directory non conforme avec le journal
- A X J: Fichier/Directory non présent dans la branche

QUESTION

-donner la possibilité a l'utilisateur de donner une RacineB
-Algo recursive
-Faire un algo pour mettre a jour le journal

A PENSER

-tester le propriétaire du fichier, le groupe



STRUCTURE FICHIER ./synchro (dans $HOME)

(1ier ligne: RacineOrigineB) si RacineOrigineB non fixe
niem ligne: DATA ======(sous forme)========>  RacineOrigineA /Chemin/ NomFichier/Directory ModificationDate Permission Taille

ou

1ier ligne: RacineOrigineA
(2ier ligne: RacineOrigineB) si RacineOrigineB non fixe
niem ligne: DATA ======(sous forme)========>  /Chemin/NomFichier/Directory ModificationDate Permission Taille

DIFFERENT CAS POSSIBLE

IF A == Dir && B == Fich || A == Fich && B == Dir
  1) CONFLIT
ELSEIF A ==DIR && B == DIR
  2) RECURSIVE
ELSEIF A == Fich && B == Fich
  IF A == J == B
    3) OK
  ELSEIF A != J == B
    4) Mise a jour RacineA (avec) RacineB (avec) pas écriture dans le journal
  ELSEIF A == J != B
    5) Mise a jour RacineB (avec) RacineA (avec) pas écriture dans le journal
  ELSEIF A != J != B
    6) CONFLIT
  ELSEIF A X J == B
    7) Mise a jour RacineA (avec) RacineB (avec) écriture dans le journal
  ELSEIF A == J X B
    8) Mise a jour RacineB (avec) RacineA (avec) écriture dans le journal
  EndIF
EndIF



FONCTION

Mise a jour X (avec) Y (avec) E
{
cp Y X  #copie colle le fichier Y a X
touch X -r Y  #mets le timestamps du fichier Y dans X
IF E == vrai
  ecrire dans le journal
EndIf
}

CONFLIT

A définir

BOUT DE CODE UTILE

Print octal right : stat -c "%a" FILE
print size in bits : stat -c "%s" FILE
print ID of group : stat -c "%g" FILE
print ID of owner : stat -c "%u" FILE


ALGO DEPART cas RacineB fixe

  RacineB = XX
  RacineA = PARAMETTRE
  IF ./synchro existe
    IF RacineA est au dessus de racineB dans l'arborescence
      effacer ./synchro
      effacer RacineB
    EndIf
  Else
    Creer ./synchro
  EndIf
  appelle ALGO MAIN



ALGO DEPART cas RacineB non fixe

  RacineB1 = PARAMETTRE
  RacineA = PARAMETTRE
  IF ./synchro existe
    récuperer RacineB2 dans ./synchro
    IF RacineA est au dessus de racineB dans l'arborescence || RacineB1 != RacineB2
      effacer ./synchro
      effacer RacineB2
    EndIf
  Else
    Creer ./synchro
    ecrire RacineB1 dans ./synchro
  EndIf
  appelle ALGO MAIN
