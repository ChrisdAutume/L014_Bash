#!/bin/bash

# $1 RacineA

RacineB=~/racineB/

if [[ ! ( -d $RacineB ) ]]; then #Si le fichier ~/racineB n'existe pas, on le créer.
  mkdir $RacineB
fi
echo ""
if [[ $# -eq 1 ]]; then # si on a un paramettre
  RacineA=$1
  if [[ -d $RacineA ]]; then # si RacineA pointe vers un directory
    DirPath=$RacineA
    DirectoryRacine=$(basename $RacineA)
  elif [[ -f $RacineA ]]; then # si RacineA pointe vers un fichier
    DirPath=$(dirname $RacineA)/
    DirectoryRacine=$(basename -- "$(dirname -- "$RacineA")")
  else # si RacineA ne pointe pas vers un fichier ou un directory
    echo -e "'\e[4m$RacineA\e[0m' n'existe pas."
  fi
  if [[ -e $RacineB.synchro && -e $RacineA ]]; then #si le fichier .synchro existe et si RacineA pointe vers quelque chose
    if [[ -z `find $RacineB -name $DirectoryRacine` ]]; then #si il ne trouve pas le directory dans la racineB
      rm -rf $RacineB* #supprime l'ancienne synchonisation
      echo $DirPath > $RacineB.Config #ecrit le fichier .Config
      if [[ -e $RacineB.synchro ]]; then
        rm $RacineB.synchro #reset le fichier .synchro
        rm $RacineB.log #reset le fichier .log
      fi
      "$(dirname $0)"/Main "$DirPath" "$RacineB" ""
    else
      RacineA=$(head -n 1 $RacineB.Config)
      Chemin=$(sed "s|${RacineA}||" <<< "$DirPath")
      # echo $RacineA
      # echo $Chemin
      "$(dirname $0)"/Main "$RacineA" "$RacineB" "$Chemin"
    fi
  elif [[ ! ( -e $RacineB/.synchro) && -e $RacineA  ]]; then # si pas de fichier .synchro et que la RacineA pointe vers quelque chose
    echo $DirPath > $RacineB.Config
    if [[ -e $RacineB.synchro ]]; then
      rm $RacineB.synchro #reset le fichier .synchro
      rm $RacineB.log #reset le fichier .log
    fi
    "$(dirname $0)"/Main "$DirPath" "$RacineB" ""
  fi

elif [[ $# -eq 0 ]]; then #si pas de paramettre passé
  if [[ -e $RacineB.Config ]]; then #si le fichier .Config existe
    RacineA=$(head -n 1 $RacineB.Config)
    DirPath=$(pwd)/
    DirectoryRacine=$(basename "$(pwd)")
    if [[ -z `find $RacineB -name $DirectoryRacine` ]]; then #si il ne trouve pas le directory dans la racineB
      echo -e "\e[1mATTENTION:\e[0m vous allez ecraser votre ancienne synchronisation de Racine: '\e[4m$RacineA\e[0m' par '\e[4m$DirPath\e[0m'. \e[1m[y/N]:\e[0m "
      read rep
      if [[ $rep = 'y' ]]; then # si reponse est oui
        echo $DirPath > $RacineB.Config #ecrit le fichier .Config
        if [[ -e $RacineB.synchro ]]; then
          rm $RacineB.synchro #reset le fichier .synchro
          rm $RacineB.log #reset le fichier .log
        fi
        "$(dirname $0)"/Main "$DirPath" "$RacineB" ""
      fi
    else
      "$(dirname $0)"/Main "$RacineA" "$RacineB" ""
    fi
  else #Si le fichier .Config n'existe pas
    DirPath=$(pwd)/
    echo -e "\e[1mPas de parametre ni de fichier '\e[4m.Config\e[0m': vous n'avez pas commencé de synchonisation\e[0m"
    echo -e "Voulez vous faire une synchronisation à la racine '\e[4m$DirPath\e[0m'. \e[1m[y/N]:\e[0m"
    read rep
    if [[ $rep = 'y' ]]; then # si reponse est oui
      echo $DirPath > $RacineB.Config #ecrit le fichier .Config
      if [[ -e $RacineB.synchro ]]; then
        rm $RacineB.synchro #reset le fichier .synchro
        rm $RacineB.log  #reset le fichier .log
      fi
      "$(dirname $0)"/Main "$DirPath" "$RacineB" ""
    fi
  fi

else # si plus de un parametre
  echo -e "\e[1mUsage\e[0m: trop de paramettre passés."
fi
